package com.example.myapplication;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import com.example.myapplication.retrofit2.apiutils;
import com.example.myapplication.retrofit2.dataclient;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.BitSet;
import java.util.Random;

import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.RequestBody;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class RegisterActivity extends AppCompatActivity {

    ImageView imgdk;
    EditText edttk,edtmk;
    Button btnxn;
    Toolbar toolbar;
    int Request_Code_Image = 123;
    String realpath = "";
    String taikhoan="";
    String matkhau="";
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        anhxa();
        imgdk.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_PICK);
                intent.setType("image/*");
                startActivityForResult(intent, Request_Code_Image);
            }
        });
        btnxn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                taikhoan = edttk.getText().toString();
                matkhau = edtmk.getText().toString();

                if (taikhoan.length()>0 && matkhau.length()>0){
                    File file = new File(realpath);
                    String file_path = file.getAbsolutePath();
                    final String[] mangtenfile = file_path.split("\\.");
                    int i;
                    for (i = 0; i < 10; i++) {
                        i++;
                    }
                    file_path = mangtenfile[0] + "_rd" + System.currentTimeMillis() + "." + mangtenfile[1];// x ==== System.currentTimeMillis()
                    RequestBody requestBody = RequestBody.create(MediaType.parse("multipart/form-data"), file);
                    MultipartBody.Part body = MultipartBody.Part.createFormData("uploaded_file", file_path, requestBody);
                    dataclient Dataclient = apiutils.getdata();
                    retrofit2.Call<String> callback = Dataclient.uploadphoto(body);
                    callback.enqueue(new Callback<String>() {
                        @Override
                        public void onResponse(Call<String> call, Response<String> response) {
                            Log.d("khoa", "urlanh " + response.body());
                            if (response.isSuccessful()) {
                                String message = response.body();
                                if (message.length()>0){
                                    dataclient insertdata = apiutils.getdata();
                                    String hinhanh= apiutils.base_ur+"image/"+ message;
                                    retrofit2.Call<String> callback = insertdata.insertdata(taikhoan,matkhau,hinhanh);//apiutils.base_ur+"image/"+ message
                                    callback.enqueue(new Callback<String>() {
                                        @Override
                                        public void onResponse(Call<String> call, Response<String> response) {
                                            String result = response.body();
                                            Log.d("khoa", "khoa:trong " + result);
                                            if (result.equals("thanhcong")){
                                                Toast.makeText(RegisterActivity.this, "Thêm thành công!", Toast.LENGTH_SHORT).show();
                                                finish();
                                            }
                                        }

                                        @Override
                                        public void onFailure(Call<String> call, Throwable t) {
                                            Log.d("khoa", "onFailure:trong " + t.getMessage());
                                        }
                                    });
                                }
                            } else{
                                Log.d("khoa", "onResponse: lỗi nè");
                            }
                        }

                        /// JSON document was not fully consumed.
                        // hình như là lỗi tên dài
                        @Override
                        public void onFailure(Call<String> call, Throwable t) {
                            Log.d("khoa", "onFailure: " + t.getMessage());
                        }
                    });
                }else {
                    Toast.makeText(RegisterActivity.this, "Vui lòng nhập đủ thông tin", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        if (requestCode == Request_Code_Image && resultCode == RESULT_OK && data != null){
            Uri uri = data.getData();
            realpath =getRealPathFromURI(uri);
            try {
                InputStream inputStream = getContentResolver().openInputStream(uri);
                Bitmap bitmap = BitmapFactory.decodeStream(inputStream);
                imgdk.setImageBitmap(bitmap);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    private void anhxa() {
        imgdk = findViewById(R.id.imgDK);
        edttk = findViewById(R.id.editTextTKDK);
        edtmk = findViewById(R.id.editTextPWDK);
        btnxn = findViewById(R.id.btnxacnhanDK);
        toolbar = findViewById(R.id.toolbardk);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    public String getRealPathFromURI (Uri contentUri) {
        String path = null;
        String[] proj = { MediaStore.MediaColumns.DATA };
        Cursor cursor = getContentResolver().query(contentUri, proj, null, null, null);
        if (cursor.moveToFirst()) {
            int column_index = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
            path = cursor.getString(column_index);
        }
        cursor.close();
        return path;
    }
}








&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7
---------------------------------------------------------------------------------------------
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7
---------------------------------------------------------------------------------------------
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7
---------------------------------------------------------------------------------------------







<?php 
    $file_path = "image/";
    $file_path = $file_path.basename($_FILES['uploaded_file']['name']);

    if (move_uploaded_file($_FILES['uploaded_file']['tmp_name'], $file_path)) {
        echo $_FILES['uploaded_file']['name'];
    } else{
        echo "failed  ".$_FILES['uploaded_file']['error'];
    }
 ?>